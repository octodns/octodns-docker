#!/usr/bin/env python3

import sys

PLATFORMS = 'linux/amd64,linux/arm64'

try:
    import yaml
except ModuleNotFoundError:
    sys.exit("fatal: pyyaml missing. install with 'pip3 install pyyaml'")

def image_name(flavor):
    if flavor == 'all':
        return 'octodns'
    else:
        return flavor

def write_test_workflow(flavors):
    jobs = {
        'Test': {
            'name': 'Test ${{matrix.flavor}}',
            'runs-on': 'ubuntu-latest',
            'strategy': {
                'matrix': {
                    'flavor': flavors
                }
            },
            'steps': [
                {'uses': 'actions/checkout@v4'},
                {
                    'uses': 'docker/setup-qemu-action@v3',
                    'with': {'platforms': 'arm64,arm'}
                },
                {
                    'uses': 'docker/setup-buildx-action@v3',
                    'with': {'platforms': PLATFORMS}
                },
                {
                    'name': 'create metadata (tags and labels)',
                    'uses': 'docker/metadata-action@v5',
                    'id': 'meta',
                    'with': {
                        'images': 'octodns/${{matrix.flavor}}',
                        'flavor': 'latest=false',
                        'tags': 'type=raw,value={{date \'YYYY.MM\'}}',
                        'labels': ''
                            'org.opencontainers.image.documentation=https://github.com/octodns/octodns#readme'
                            ' org.opencontainers.image.licenses=MIT'
                    }
                },
                {
                    'name': 'build image on all platforms',
                    'uses': 'docker/build-push-action@v6',
                    'with': {
                        'context': 'all',
                        'platforms': PLATFORMS,
                        'tags': '${{ steps.meta.outputs.tags }}',
                        'labels': '${{ steps.meta.outputs.labels }}',
                        'build-args': 'OCTODNS_FLAVOR=${{ matrix.flavor }}',
                        'cache-from': 'type=gha',
                        'cache-to': 'type=gha,mode=max'
                    }
                },
                {
                    'name': 'script/build',
                    'run': 'script/build ${{ matrix.flavor }} ${{ steps.meta.outputs.tags }}'
                },
                {
                    'name': 'script/test',
                    'run': 'script/test ${{ steps.meta.outputs.tags }}'
                }
            ]
        }
    }
    with open(".github/workflows/test.yml", 'w', encoding='UTF-8') as f:
        yaml.dump({
            'on': {'pull_request': {'branches': ['main']}},
            'name': 'Test',
            'jobs': jobs,
        }, f)

def write_publish_workflow(flavors):
    jobs = {
        'Publish': {
            'name': 'Publish ${{matrix.flavor}}',
            'runs-on': 'ubuntu-latest',
            'strategy': {
                'matrix': {
                    'flavor': flavors
                }
            },
            'steps': [
                {'uses': 'actions/checkout@v4'},
                {
                    'uses': 'docker/setup-qemu-action@v3',
                    'with': {'platforms': 'arm64,arm'}
                },
                {
                    'uses': 'docker/setup-buildx-action@v3',
                    'with': {'platforms': PLATFORMS}
                },
                {
                    'name': 'create metadata (tags and labels)',
                    'uses': 'docker/metadata-action@v5',
                    'id': 'meta',
                    'with': {
                        'images': 'octodns/${{matrix.flavor}}',
                        'flavor': 'latest=false',
                        'tags': ''
                            # set dated tag
                            'type=raw,value={{date \'YYYY.MM\'}},enable={{is_default_branch}}'
                            # set latest tag for default branch
                            '\ntype=raw,value=latest,enable={{is_default_branch}}',
                        'labels': ''
                            'org.opencontainers.image.documentation=https://github.com/octodns/octodns#readme'
                            ' org.opencontainers.image.licenses=MIT'
                    }
                },
                {
                    'name': 'login to docker.io registry',
                    'uses': 'docker/login-action@v3',
                    'with': {
                        'registry': 'docker.io',
                        'username': 'octodns',
                        'password': '${{ secrets.DOCKER_PASSWORD }}'
                    }
                },
                {
                    'name': 'build & push image for all supported platforms',
                    'uses': 'docker/build-push-action@v6',
                    'with': {
                        'context': 'all',
                        'push': '${{ github.event_name == \'push\' && github.ref == \'refs/heads/main\' }}',
                        'tags': '${{ steps.meta.outputs.tags }}',
                        'labels': '${{ steps.meta.outputs.labels }}',
                        'build-args': 'OCTODNS_FLAVOR=${{ matrix.flavor }}',
                        'cache-from': 'type=gha',
                        'cache-to': 'type=gha,mode=max',
                        'platforms': PLATFORMS
                    }
                }
            ]
        }
    }
    with open(".github/workflows/publish-on-push-to-main.yml", 'w', encoding='UTF-8') as f:
        yaml.dump({
            'on': {
                'push': { 'branches': ['main', 'github-actions', 'multiarch'] },
                'workflow_dispatch': {},
            },
            'name': 'Publish to Docker Hub',
            'jobs': jobs,
        }, f)

def print_markdown_table(flavors):
    print('| Flavor | Module | Docker Hub |')
    print('|--------|--------|------------|')
    for flavor in flavors:
        if flavor == "octodns":
            print(f'| {flavor} (all) | [octodns](https://github.com/octodns/octodns) | [octodns/{image_name(flavor)}](https://hub.docker.com/r/octodns/{image_name(flavor)}) |')
        else:
            print(f'| {flavor} | [octodns_{flavor}](https://github.com/octodns/octodns-{flavor}) | [octodns/{image_name(flavor)}](https://hub.docker.com/r/octodns/{image_name(flavor)}) |')

def main():
    with open('all/requirements.txt', 'r', encoding='UTF-8') as file:
        flavors = [line.rstrip() for line in file.readlines()]
        flavors.pop(0)
        flavors = [flavor.split('==')[0].split('-')[1] for flavor in flavors]
    flavors.append("octodns")
    flavors.sort()
    print(flavors)
    write_test_workflow(flavors)
    write_publish_workflow(flavors)
    print_markdown_table(flavors)

if __name__ == "__main__":
    main()
